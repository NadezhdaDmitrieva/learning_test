import re

letters = {
    "А": "A", "Б": "B", "В": "V", "Г": "G", "Д": "D",
    "Е": "E", "Ё": "Yo", "Ж": "Zh", "З": "Z", "И": "I",
    "Й": "J", "К": "K", "Л": "L", "М": "M", "Н": "N",
    "О": "O", "П": "P", "Р": "R", "С": "S", "Т": "T",
    "У": "U", "Ф": "F", "Х": "X", "Ц": "Cz", "Ч": "Ch",
    "Ш": "Sh", "Щ": "Shh", "Ъ": "", "Ы": "Y'", "Ь": "",
    "Э": "E'", "Ю": "Yu", "Я": "Ya",
    "а": "a", "б": "b", "в": "v", "г": "g", "д": "d",
    "е": "e", "ё": "yo", "ж": "zh", "з": "z", "и": "i",
    "й": "j", "к": "k", "л": "l", "м": "m", "н": "n",
    "о": "o", "п": "p", "р": "r", "с": "s", "т": "t",
    "у": "u", "ф": "f", "х": "x", "ц": "cz", "ч": "ch",
    "ш": "sh", "щ": "shh", "ъ": "", "ы": "y", "ь": "",
    "э": "e'", "ю": "yu", "я": "ya"
}

input_text = 'Привет, мир!'

# создание регулярного выражения с помощью re.compile, 
# которое говорит Найти либо А, либо Б, либо В. Такми образом мы сделали паттерн
def transliterateme(russian_text): 
    df = re.compile("|".join(map(re.escape, letters.keys()))) # создание регулярки 'А|Б|В|Г|Д|Е|Ё|Ж|З|И|Й|К|Л|М|Н|О|П....  =  выбер или или 
    # re.sub sub выполняет поиск, вызывает функцию для каждого совпадения и возвращает преобразованный текст.
    trans_text = df.sub(lambda match: letters[match.group(0)], russian_text)
    return trans_text

print(transliterateme("ХоХоG144"))
print(transliterateme(input_text))
print(transliterateme('Цыпленок встал на цыпочках и сказал цыпленку "Щьь"'))